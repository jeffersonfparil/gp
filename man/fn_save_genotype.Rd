% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io.R
\name{fn_save_genotype}
\alias{fn_save_genotype}
\title{Save numeric genotype matrix into a file}
\usage{
fn_save_genotype(G, fname, file_type = c("RDS", "TSV")[1], verbose = FALSE)
}
\arguments{
\item{G}{numeric n samples x p loci-alleles matrix of allele frequencies with non-null row and column names.
Row names can be any string of characters which identify the sample or entry or pool names.
Column names need to be tab-delimited, where first element refers to the chromosome or scaffold name,
the second should be numeric which refers to the position in the chromosome/scaffold, and
subsequent elements are optional which may refer to the allele identifier and other identifiers.}

\item{fname}{file name of the output file}

\item{file_type}{output file format (Default="RDS"). Choose from:
\itemize{
\item "RDS": Rds file containing a single numeric n samples x p loci-alleles matrix of allele frequencies with non-null row and column names.
Row names can be any string of characters which identify the sample or entry or pool names.
Column names need to be tab-delimited, where first element refers to the chromosome or scaffold name,
the second should be numeric which refers to the position in the chromosome/scaffold, and
subsequent elements are optional which may refer to the allele identifier and other identifiers.
\item "TSV": allele frequency table saved as a tab-delimited file with a header line and the first 3 columns refer to the
chromosome (chr), position (pos), and allele (allele),
with subsequent columns referring to the allele frequencies of a sample, entry or pool.
Names of the samples, entries, or pools in the header line can be any unique string of characters.
}}

\item{verbose}{show genotype saving messages? (Default=FALSE)}
}
\value{
Ok: file name of the output file
Err: gpError
}
\description{
Save numeric genotype matrix into a file
}
\examples{
list_sim = fn_simulate_data(verbose=TRUE)
G = fn_load_genotype(list_sim$fname_geno_vcf, min_depth=42, max_depth=750)
fn_save_genotype(G=G, fname="test.Rds", file_type="Rds", verbose=TRUE)
fn_save_genotype(G=G, fname="test.tsv", file_type="tsv", verbose=TRUE)
}
