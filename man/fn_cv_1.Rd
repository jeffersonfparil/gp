% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cross_validation.R
\name{fn_cv_1}
\alias{fn_cv_1}
\title{Cross-validate on a single fold, replicate, and model}
\usage{
fn_cv_1(
  i,
  list_merged,
  df_params,
  mat_idx_shuffle,
  vec_set_partition_groupings,
  prefix_tmp = "gsTmp",
  verbose = FALSE
)
}
\arguments{
\item{i}{index referring to the row in df_params (below) from which
the replicate id, fold number and model will be sourced from}

\item{list_merged}{list of merged genotype matrix, and phenotype vector, as well as an optional covariate matrix
\itemize{
\item $G: numeric n samples x p loci-alleles matrix of allele frequencies with non-null row and column names.
Row names can be any string of characters which identify the sample or entry or pool names.
Column names need to be tab-delimited, where first element refers to the chromosome or scaffold name,
the second should be numeric which refers to the position in the chromosome/scaffold, and
subsequent elements are optional which may refer to the allele identifier and other identifiers.
\item $list_pheno:
\itemize{
\item $y: named vector of numeric phenotype data
\item $pop: population or groupings corresponding to each element of y
\item $trait_name: name of the trait
}
\item $COVAR: numeric n samples x k covariates matrix with non-null row and column names.
}}

\item{df_params}{data frame containing all possible or just a defined non-exhaustive combinations of:
\itemize{
\item $rep: replication number
\item $fold: fold number
\item $model: model name
}}

\item{mat_idx_shuffle}{numeric n sample x r replications matrix of sample/entry/pool index shuffling where
each column refer to a random shuffling of samples/entry/pool from which the identities of the
training and validation sets will be sourced from}

\item{vec_set_partition_groupings}{vector of numeric partitioning indexes of size n samples, where each index refer to the
fold which will serve as the validation population}

\item{prefix_tmp}{string referring to the prefix of the temporary files,
i.e. prefix (which can include an existing directory) of Bayesian (BGLR) model temporary files}

\item{verbose}{show cross-validation on a single fold, replicate, and model messages? (Default=FALSE)}
}
\value{
\itemize{
\item Ok:
\itemize{
\item $df_metrics:
\itemize{
\item $rep: replication number
\item $fold: fold number
\item $model: genomic prediction model name
\item $pop_training: population/s used in the training set (separated by commas if more than 1)
\item $pop_validation: population/s used in the validation set (separated by commas if more than 1)
\item $n_training: number of samples/entries/pools in the training set
\item $n_validation: number of samples/entries/pools in the validation set
\item $duration_mins: time taken in minutes to fit the genomic prediction model and assess the prediction accuracies
\item $n_non_zero: number of non-zero estimated effects (effects greater than machine epsilon ~2.2e-16)
\item $n_total_features: total number of zero and non-zero effects, i.e. total number of SNPs/alleles/features
\item $mbe: mean bias error
\item $mae: mean absolute error
\item $rmse: root mean squared error
\item $r2: coefficient of determination
\item $corr: Pearson's product moment correlation
\item $power_t10: fraction of observed top 10 phenotype values correctly predicted
\item $power_b10: fraction of observed bottom 10 phenotype values correctly predicted
\item $var_pred: variance of predicted phenotype values (estimator of additive genetic variance)
\item $var_true: variance of observed phenotype values (estimator of total phenotypic variance)
\item $h2: narrow-sense heritability estimate
}
\item $df_y_validation:
\itemize{
\item $rep: replication number
\item $fold: fold number
\item $model: genomic prediction model name
\item $pop_training: population/s used in the training set (separated by commas if more than 1)
\item $id: names of the samples/entries/pools,
\item $pop_validation: population from which the sample/entry/pool belongs to
\item $y_true: observed phenotype values
\item $y_pred: predicted phenotype values
}
\item $fname_metrics_out: filename of df_metrics saved as a the tab-delimited file with 2 rows
\item $fname_y_validation_out: filename of df_y_validation saved as a the tab-delimited file
}
\item Err: gpError
}
}
\description{
Cross-validate on a single fold, replicate, and model
}
\examples{
list_sim = fn_simulate_data(n_pop=3, verbose=TRUE)
G = fn_load_genotype(fname_geno=list_sim$fname_geno_vcf)
list_pheno = fn_load_phenotype(fname_pheno=list_sim$fname_pheno_tsv)
COVAR = G \%*\% t(G)
n = nrow(G)
n_reps = 3
n_folds = 5
set_size = floor(n / n_folds)
vec_models_to_test = c("ridge", "lasso", "elastic_net", "Bayes_A", "Bayes_B", "Bayes_C", "gBLUP")
list_merged = fn_merge_genotype_and_phenotype(G=G, list_pheno=list_pheno, COVAR=COVAR, verbose=TRUE)
df_params = expand.grid(rep=c(1:n_reps), fold=c(1:n_folds), model=vec_models_to_test)
mat_idx_shuffle = matrix(sample(1:n, size=n, replace=FALSE), ncol=1)
if (n_reps > 1) {
    for (r in 2:n_reps) {
        mat_idx_shuffle = cbind(mat_idx_shuffle, sample(1:n, size=n, replace=FALSE))
    }
}
vec_set_partition_groupings = rep(1:n_folds, each=set_size)
if (length(vec_set_partition_groupings) < n) {
    vec_set_partition_groupings = c(
         vec_set_partition_groupings, 
         rep(n_folds, times=(n-length(vec_set_partition_groupings)))
     )
}
list_cv_1 = fn_cv_1(
    i=2, 
    list_merged=list_merged, 
    df_params=df_params, 
    mat_idx_shuffle=mat_idx_shuffle, 
    vec_set_partition_groupings=vec_set_partition_groupings,
    prefix_tmp=tempfile(),
    verbose=TRUE)
}
